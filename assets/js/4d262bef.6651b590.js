"use strict";(self.webpackChunkserenity_users_guide=self.webpackChunkserenity_users_guide||[]).push([[539],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},u=Object.keys(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,u=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),m=s(n),d=i,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||u;return n?r.createElement(f,a(a({ref:t},l),{},{components:n})):r.createElement(f,a({ref:t},l))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var u=n.length,a=new Array(u);a[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var s=2;s<u;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4890:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return l},default:function(){return m}});var r=n(7462),i=n(3366),u=(n(7294),n(3905)),a=["components"],o={},c="Running Cucumber scenarios with Serenity",s={unversionedId:"guide/cucumber",id:"guide/cucumber",isDocsHomePage:!1,title:"Running Cucumber scenarios with Serenity",description:"To run Cucumber scenarios with Serenity, you need to create a Junit 4 test runner class and use @RunWith annotation in with the CucumberWithSerenity class, like this:",source:"@site/docs/guide/cucumber.md",sourceDirName:"guide",slug:"/guide/cucumber",permalink:"/documentation/docs/guide/cucumber",editUrl:"https://github.com/serenity-bdd/documentation/docs/guide/cucumber.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Integrating with JIRA and other issue trackers",permalink:"/documentation/docs/guide/issue-trackers"},next:{title:"Screenplay Fundamentals",permalink:"/documentation/docs/screenplay/screenplay_fundamentals"}},l=[],p={toc:l};function m(e){var t=e.components,o=(0,i.Z)(e,a);return(0,u.kt)("wrapper",(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h1",{id:"running-cucumber-scenarios-with-serenity"},"Running Cucumber scenarios with Serenity"),(0,u.kt)("p",null,"To run Cucumber scenarios with Serenity, you need to create a Junit 4 test runner class and use ",(0,u.kt)("inlineCode",{parentName:"p"},"@RunWith")," annotation in with the ",(0,u.kt)("inlineCode",{parentName:"p"},"CucumberWithSerenity")," class, like this:"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-java"},'import io.cucumber.junit.CucumberOptions;\nimport net.serenitybdd.cucumber.CucumberWithSerenity;\nimport org.junit.runner.RunWith;\n\n@RunWith(CucumberWithSerenity.class)\n@CucumberOptions(\n        plugin = {"pretty"},\n        features = "src/test/resources/features"\n)\npublic class AcceptanceTestSuite {}\n')),(0,u.kt)("p",null,"Note that you need to specify at least the ",(0,u.kt)("inlineCode",{parentName:"p"},"features")," attribute, to define the directory containing your feature files."),(0,u.kt)("h1",{id:"feature-hierarchies"},"Feature hierarchies"),(0,u.kt)("p",null,"Serenity expects to find feature files in the ",(0,u.kt)("inlineCode",{parentName:"p"},"src/test/resources/features")," folder by default. You can organise your feature files in a hierarchy of folders underneath this one, as shown here:"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},"+ src\n|-- test\n|   |-- resources\n|   |  |-- features\n|   |  |   |-- authentication\n|   |  |   |   |-- login.feature\n|   |  |   |-- cart\n|   |  |   |   |-- managing_the_cart.feature\n|   |  |   |-- catalog\n|   |  |   |   |-- browse_catalog.feature\n|   |  |   |   |-- filtering_products.feature\n|   |  |   |-- purchases\n|   |  |   |   |-- completing_a_purchase.feature\n|   |  |   |-- sales_tax\n|   |  |   |   |-- calculating_sales_tax.feature\n")),(0,u.kt)("p",null,"The directory structure will be used to build the Serenity requirements hierarchy, like the one shown here:"),(0,u.kt)("p",null,(0,u.kt)("img",{src:n(4010).Z})),(0,u.kt)("h1",{id:"filtering-test-exeuction-in-cucumber"},"Filtering test exeuction in Cucumber"),(0,u.kt)("p",null,"The simplest way to control which scenarios you want to execute is to use tags and the ",(0,u.kt)("inlineCode",{parentName:"p"},"cucumber.filter.tags")," command line option. For example, to run only scenarios or features annotated with ",(0,u.kt)("inlineCode",{parentName:"p"},"@smoke"),", you would run the following command:"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},'mvn clean verify -Dcucumber.filter.tags="@smoke"\n')),(0,u.kt)("p",null,"You can use ",(0,u.kt)("a",{parentName:"p",href:"https://cucumber.io/docs/cucumber/api/#tag-expressions"},"Cucumber Tag Expressions")," to determine which scenarios to run. For example, to run only features with both the ",(0,u.kt)("inlineCode",{parentName:"p"},"@authentication")," tag and the ",(0,u.kt)("inlineCode",{parentName:"p"},"@smoke")," tag, you would run the following:"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},' mvn clean verify -Dcucumber.filter.tags="@authentication and @smoke"\n')),(0,u.kt)("p",null,"To run scenarios with either the ",(0,u.kt)("inlineCode",{parentName:"p"},"@cart")," or the ",(0,u.kt)("inlineCode",{parentName:"p"},"@catalog")," tag, you could run the following:"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},' mvn clean verify -Dcucumber.filter.tags="@cart or @catalog"\n')))}m.isMDXComponent=!0},4010:function(e,t,n){t.Z=n.p+"assets/images/cucumber-requirements-hierarchy-a21ffb057df85059e19480918c7c2d34.png"}}]);