<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.serenity-bdd.info/documentation/blog</id>
    <title>Serenity BDD Users Manual Blog</title>
    <updated>2021-11-27T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.serenity-bdd.info/documentation/blog"/>
    <subtitle>Serenity BDD Users Manual Blog</subtitle>
    <icon>https://www.serenity-bdd.info/documentation/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[What's New In Serenity 3.1.0]]></title>
        <id>whats-new-in-serenity-3.1.0</id>
        <link href="https://www.serenity-bdd.info/documentation/blog/whats-new-in-serenity-3.1.0"/>
        <updated>2021-11-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Serenity 3.1.0]]></summary>
        <content type="html"><![CDATA[<p>Serenity BDD is one of the most popular Java test automation libraries, and for good reason!</p><p>If you are writing automated web tests in Java, using Serenity BDD correctly can reduce the amount of code you need to write by well over 50%, slashing the amount of code you need to maintain yourself. Serenity BDD produces powerful test reports that you can use both as as evidence of your testing activities and documentation of your application. And with over a million downloads a month, regular releases and a vibrant open source community, it's a solid bet for your test automation framework!</p><p>In this article, we look at some of the new features in Serenity BDD version 3.1.0.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="selenium-4-integration">Selenium 4 Integration<a class="hash-link" href="#selenium-4-integration" title="Direct link to heading">​</a></h2><p>Serenity 3.1.0 introduces support for Selenium 4.0.0 and Appium 8.0.0-BETA. Selenium 4 is the long-awaited update to Selenium, and includes many new features such as relative locators, better Docker integration with Selenium Grid.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="improved-reporting">Improved Reporting<a class="hash-link" href="#improved-reporting" title="Direct link to heading">​</a></h2><p>Serenity BDD is known for its powerful reporting and living documentation features, and in Serenity 3.1.0 the reports have been updated and improved, with many new features and an updated look and feel.
<img loading="lazy" src="/documentation/assets/images/serenity-report-overview-8bda16e856a9c20822356ea9cdfaf341.png" width="3142" height="2782" class="img_E7b_"></p><h3 class="anchor anchorWithStickyNavbar_mojV" id="test-duration-reports">Test Duration Reports<a class="hash-link" href="#test-duration-reports" title="Direct link to heading">​</a></h3><p>A new chart has been added to show test duration more clearly. You can also drill down into any of the duration buckets to see which tests are slow.
<img loading="lazy" src="/documentation/assets/images/serenity-durations-b953b439a127a1d8a705f54991f32553.png" width="1060" height="744" class="img_E7b_"></p><h3 class="anchor anchorWithStickyNavbar_mojV" id="accessibility-mode">Accessibility Mode<a class="hash-link" href="#accessibility-mode" title="Direct link to heading">​</a></h3><p>Serenity BDD 3.1.0 introduces the option to use patterns as well as colours in the charts to make them easier to read for colour vision deficient viewers. You can activate this mode by setting the setting the <code>serenity.report.accessibility</code> property to true.</p><p><img loading="lazy" src="/documentation/assets/images/serenity-patterns-66f8dd4f93e84dbd7f36d0d69e6c6206.png" width="1054" height="1024" class="img_E7b_"></p><h3 class="anchor anchorWithStickyNavbar_mojV" id="better-test-result-reporting">Better Test Result Reporting<a class="hash-link" href="#better-test-result-reporting" title="Direct link to heading">​</a></h3><p>The test results for individual features has also been improved to include the additional reporting elements:
<img loading="lazy" src="/documentation/assets/images/serenity-feature-result-3143a96bb2bfc75e0e537967f1c08f39.png" width="3152" height="2608" class="img_E7b_"></p><p>Scenario and example outcomes are also colour-coded to make it easier to see the results at a glance:
<img loading="lazy" src="/documentation/assets/images/serenity-example-results-color-coded-371708280cec4b286582b84f6a08aefa.png" width="3100" height="2102" class="img_E7b_"></p><h2 class="anchor anchorWithStickyNavbar_mojV" id="improved-webdrivermanager-integration">Improved WebDriverManager integration<a class="hash-link" href="#improved-webdrivermanager-integration" title="Direct link to heading">​</a></h2><p><a href="https://github.com/bonigarcia/webdrivermanager" target="_blank" rel="noopener noreferrer">WebDriverManager</a> has a lot of new Selenium 4 features, including the ability to setup a docker instance on the fly. Serenity 3.1.0 provides smooth integration with WebDriverManager with the <code>WebDriverManagerEnhancer</code> interface. Just create your own implementation of this interface, and place the implementation in a package that you specify in the <code>serenity.extension.packages</code> property. Here's an example:</p><div class="codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-text codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">public class SampleWebDriverManagerEnhancer implements WebDriverManagerEnhancer {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Override</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public WebDriverManager apply(WebDriverManager webDriverManager) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        return webDriverManager.browserInDocker().enableVnc().enableRecording();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="locatorless-web-elements">Locatorless Web Elements<a class="hash-link" href="#locatorless-web-elements" title="Direct link to heading">​</a></h2><p>Locatorless web elements are a convenient way Serenity Screenplay lets us locate commonly used elements on a page without needing to write complicated CSS or XPath selectors.</p><p>For example, consider the following page:
<img loading="lazy" src="/documentation/assets/images/saucelabs-example-546565aa83a0d0ca2d9f303bb235ac2f.png" width="2244" height="1192" class="img_E7b_"></p><p>We could locate and click on the Checkout button with the following code:</p><div class="codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-text codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">actor.attemptsTo(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Click.on(Button.called("Checkout"))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Elements are located by human-readable names, which can correspond to the visible text in the element, or an attribute such as id, value or data-test. Heuristic rules are used to determine appropriate locator strategies for different elements.</p><p>In other cases, we may want to be more precise. For example, we can also identify form elements by their value or their label:</p><div class="codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-text codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">actor.attemptsTo(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Click.on(Checkbox.withLabel("Terms and conditions"))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We can also locate elements that are nested inside other elements. For example, the following page contains several "Add to cart" buttons:
<img loading="lazy" src="/documentation/assets/images/saucelabs-example2-11f7daeced572c8dd2ac693fd51533a3.png" width="2222" height="1204" class="img_E7b_"></p><p>However, using locatorless elements, we could click on a specific "Add to cart" button like this:</p><div class="codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-text codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">actor.attemptsTo(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Click.on(Button.called("Add to cart")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">           .inside(PageElement.called("inventory_item")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                         .containingText("Sauce Labs Backpack"))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">);</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Locatorless elements can help make your code both easier to read and quicker to write, and also more robust, since they may try more than one locator strategy to locate the element you are looking for.</p><p>Supported elements include:</p><ul><li>Button</li><li>Checkbox</li><li>Dropdown</li><li>Image</li><li>InputField</li><li>Link</li><li>RadioButton</li><li>PageElement</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="single-browser-mode">Single Browser Mode<a class="hash-link" href="#single-browser-mode" title="Direct link to heading">​</a></h2><p>Sometimes it is useful to be able to run a series of tests in the same browser. This can speed up the tests, though it is important not to allow dependencies to occur between the tests.</p><p>To maintain a test open for the duration of a feature or scenario outline, just add the <code>@singlebrowser</code> tag, as in the following example:</p><div class="codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-text codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">Feature: Login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Rule: Customers needs to provide valid credentials to access the site</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Example: Colin logs in with valid credentials</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Given Colin is on the login page</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      When Colin logs in with valid credentials</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Then he should be presented the product catalog</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @singlebrowser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Scenario Outline: Login on with invalid credentials</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Given Colin is on the login page</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      When Colin attempts to login with the following credentials:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        | username   | password   |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        | &lt;username&gt; | &lt;password&gt; |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Then he should be presented with the error message &lt;message&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Examples:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        | username        | password       | message                                                     |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        | standard_user   | wrong_password | Username and password do not match any user in this service |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        | unknown_user    | secret_sauce   | Username and password do not match any user in this service |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        | unknown_user    | wrong_password | Username and password do not match any user in this service |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        | locked_out_user | secret_sauce   | Sorry, this user has been locked out.                       |</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In JUnit you can use the <code>@SingleBrowser</code> annotation for the same result, as shown in this JUnit 5 test:</p><div class="codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-text codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">@ExtendWith(SerenityJUnit5Extension.class)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">@SingleBrowser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public class WhenLoggingOn {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @Managed(options = "headless")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    WebDriver driver;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @CastMember</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Actor charles;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @ParameterizedTest(name = "{index}: {2}")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    @CsvSource(value = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "                       ,secret_sauce       , Username is required",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "standard_user  ,                          , Password is required",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "                       ,                          , Username is required",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "standard_user  , wrong_password , Username and password do not match any user in this service",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "wrong_user     , secret_sauce       , Username and password do not match any user in this service",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public void withInvalidCredentials(String username, String password, String errorMessage) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        charles.attemptsTo(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Login.withCredentials(username, password),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Ensure.that(LoginForm.ERROR_MESSAGE).text().contains(errorMessage)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="want-to-learn-more">Want to learn more?<a class="hash-link" href="#want-to-learn-more" title="Direct link to heading">​</a></h2><p>There are several courses on Serenity BDD in the <strong><a href="https://expansion.serenity-dojo.com" target="_blank" rel="noopener noreferrer">Serenity Dojo Training Library</a></strong>, including</p><ul><li><strong><a href="https://expansion.serenity-dojo.com/courses/serenity-and-the-screenplay-pattern" target="_blank" rel="noopener noreferrer">Write Better Automated Tests Faster With Serenity BDD, Cucumber and The Screenplay Pattern</a></strong> - a free deep-dive course into writing scalable, maintainable tests with Serenity BDD and the Screenplay pattern</li><li><strong><a href="https://expansion.serenity-dojo.com/courses/testing-web-applications-with-serenity-bdd" target="_blank" rel="noopener noreferrer">Effective UI Test Automation With Serenity BDD and Selenium</a></strong> - learn the fundamentals of web testing with Serenity BDD in this very detailed course.</li><li><strong><a href="https://expansion.serenity-dojo.com/courses/writing-more-sustainable-tests-with-the-screenplay-pattern" target="_blank" rel="noopener noreferrer">Next-generation Automated Acceptance Tests With Serenity Screenplay</a></strong> - Learn everything you need to know to master scalable test automation with the powerful Screenplay pattern.</li><li><strong><a href="https://expansion.serenity-dojo.com/courses/testing-rest-apis-with-serenity-bdd" target="_blank" rel="noopener noreferrer">Testing REST APIs with Serenity BDD and RestAssured</a></strong> - Learn how to test REST web services in Serenity BDD.</li></ul>]]></content>
        <author>
            <name>John Ferguson Smart</name>
            <uri>https://github.com/wakaleo</uri>
        </author>
        <category label="reporting" term="reporting"/>
        <category label="locatorless-elements" term="locatorless-elements"/>
        <category label="selenium-4" term="selenium-4"/>
    </entry>
</feed>