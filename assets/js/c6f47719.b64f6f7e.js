"use strict";(self.webpackChunkserenity_users_guide=self.webpackChunkserenity_users_guide||[]).push([[8368],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>y});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},a={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},l=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=s(t),y=i,m=l["".concat(u,".").concat(y)]||l[y]||a[y]||o;return t?r.createElement(m,d(d({ref:n},p),{},{components:t})):r.createElement(m,d({ref:n},p))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,d=new Array(o);d[0]=l;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:i,d[1]=c;for(var s=2;s<o;s++)d[s]=t[s];return r.createElement.apply(null,d)}return r.createElement.apply(null,t)}l.displayName="MDXCreateElement"},7305:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=t(7462),i=(t(7294),t(3905));const o={id:"maven",title:"Using Maven with Serenity",sidebar_position:3},d="Integrating Serenity BDD into a Maven project",c={unversionedId:"guide/maven",id:"guide/maven",isDocsHomePage:!1,title:"Using Maven with Serenity",description:"Maven is the recommended build tool for Serenity BDD.",source:"@site/docs/guide/maven.md",sourceDirName:"guide",slug:"/guide/maven",permalink:"/documentation/docs/guide/maven",editUrl:"https://github.com/serenity-bdd/documentation/docs/guide/maven.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"maven",title:"Using Maven with Serenity",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Creating A New Project",permalink:"/documentation/docs/guide/getting_started"},next:{title:"Step Libraries",permalink:"/documentation/docs/guide/step_libraries"}},u=[{value:"Serenity JUnit 4 Dependencies",id:"serenity-junit-4-dependencies",children:[]},{value:"Serenity JUnit 5 Dependencies",id:"serenity-junit-5-dependencies",children:[]},{value:"Serenity Cucumber Dependencies",id:"serenity-cucumber-dependencies",children:[]},{value:"Cucumber with JUnit 4 Dependencies",id:"cucumber-with-junit-4-dependencies",children:[]},{value:"Cucumber with JUnit 5 Dependencies",id:"cucumber-with-junit-5-dependencies",children:[]},{value:"Screenplay",id:"screenplay",children:[]},{value:"The Serenity Maven Plugin",id:"the-serenity-maven-plugin",children:[]}],s={toc:u};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"integrating-serenity-bdd-into-a-maven-project"},"Integrating Serenity BDD into a Maven project"),(0,i.kt)("p",null,"Maven is the recommended build tool for Serenity BDD."),(0,i.kt)("p",null,"You can add Serenity BDD to an existing Maven project by adding the corresponding dependencies to your ",(0,i.kt)("inlineCode",{parentName:"p"},"pom.xml")," file. All Serenity BDD projects need the following core dependency:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-core</artifactId>\n    <version>${serenity.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,i.kt)("p",null,"You will also need a test runner, which will usually be either JUnit 4, JUnit 5 or Cucumber."),(0,i.kt)("h2",{id:"serenity-junit-4-dependencies"},"Serenity JUnit 4 Dependencies"),(0,i.kt)("p",null,"To use JUnit 4 you will need the following dependency:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-junit</artifactId>\n    <version>${serenity.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,i.kt)("h2",{id:"serenity-junit-5-dependencies"},"Serenity JUnit 5 Dependencies"),(0,i.kt)("p",null,"To use JUnit 5 you will need the following dependency:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-junit5</artifactId>\n    <version>${serenity.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,i.kt)("p",null,"You will also need the JUnit 5 dependencies, e.g."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>org.junit.jupiter</groupId>\n    <artifactId>junit-jupiter-api</artifactId>\n    <version>${junit5.version}</version>\n    <scope>test</scope>\n</dependency>\n<dependency>\n    <groupId>org.junit.jupiter</groupId>\n    <artifactId>junit-jupiter-engine</artifactId>\n    <version>${junit5.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,i.kt)("h2",{id:"serenity-cucumber-dependencies"},"Serenity Cucumber Dependencies"),(0,i.kt)("p",null,"For Cucumber you will need the following dependency:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-cucumber</artifactId>\n    <version>${serenity.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,i.kt)("p",null,"Since Serenity relies on a specific version of the Cucumber APIs, we recommend using the same version of the Cucumber libraries."),(0,i.kt)("p",null,"Cucumber requires a test runner, either JUnit 4 or JUnit 5."),(0,i.kt)("h2",{id:"cucumber-with-junit-4-dependencies"},"Cucumber with JUnit 4 Dependencies"),(0,i.kt)("p",null,"To use JUnit 4 you will need the following dependency:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>io.cucumber</groupId>\n    <artifactId>cucumber-junit</artifactId>\n    <version>${cucumber.version}</version>\n    <scope>test</scope>\n</dependency>\n<dependency>\n    <groupId>org.junit.platform</groupId>\n    <artifactId>junit-vintage-engine</artifactId>\n    <version>${junit5.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,i.kt)("h2",{id:"cucumber-with-junit-5-dependencies"},"Cucumber with JUnit 5 Dependencies"),(0,i.kt)("p",null,"To use JUnit 5 you will need the following dependency:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>io.cucumber</groupId>\n    <artifactId>cucumber-junit-platform-engine</artifactId>\n    <version>${cucumber.version}</version>\n    <scope>test</scope>\n</dependency>\n<dependency>\n    <groupId>org.junit.platform</groupId>\n    <artifactId>junit-platform-suite</artifactId>\n    <version>${junit-platform.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,i.kt)("p",null,"See cucumber-junit-platform-engine documentation on using junit-platform-suite to pilot cucumber: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cucumber/cucumber-jvm/tree/main/junit-platform-engine#suites-with-different-configurations"},"https://github.com/cucumber/cucumber-jvm/tree/main/junit-platform-engine#suites-with-different-configurations"),", and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/serenity-bdd/serenity-cucumber-starter"},"https://github.com/serenity-bdd/serenity-cucumber-starter")," for a running example."),(0,i.kt)("h2",{id:"screenplay"},"Screenplay"),(0,i.kt)("p",null,"If you are using the Screenplay pattern, you will also need the Screenplay dependencies:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-screenplay</artifactId>\n    <version>${serenity.version}</version>\n    <scope>test</scope>\n</dependency>\n<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-rest-assured</artifactId>\n    <version>${serenity.version}</version>\n</dependency>\n<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-ensure</artifactId>\n    <version>${serenity.version}</version>\n    <scope>test</scope>\n</dependency>\n<dependency>\n    <groupId>net.serenity-bdd</groupId>\n    <artifactId>serenity-screenplay-webdriver</artifactId>\n    <version>${serenity.version}</version>\n    <scope>test</scope>\n</dependency>\n")),(0,i.kt)("h2",{id:"the-serenity-maven-plugin"},"The Serenity Maven Plugin"),(0,i.kt)("p",null,"If you want to generate the Serenity reports whenever you run ",(0,i.kt)("inlineCode",{parentName:"p"},"mvn verify"),", you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"serenity-maven-plugin")," to do that:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<plugin>\n    <groupId>net.serenity-bdd.maven.plugins</groupId>\n    <artifactId>serenity-maven-plugin</artifactId>\n    <version>${serenity.version}</version>\n    <configuration>\n      <tags>${tags}</tags>\n    </configuration>\n    <executions>\n        <execution>\n            <id>serenity-reports</id>\n            <phase>post-integration-test</phase>\n            <goals>\n                <goal>aggregate</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n")))}p.isMDXComponent=!0}}]);